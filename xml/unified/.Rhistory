temp.df <- do.call(bind_rows, temp.holder.l)
df.holder.l[[i]] <- temp.df
}
counter.v <- 1
another.holder.l <- vector(mode = "list")
for (i in seq_along(df.holder.l)) {
a <- df.holder.l[[i]]$orig_sent_id
a <- as.integer(a)
df.holder.l[[i]]$orig_sent_id <- a
b <- unique(a)
for (j in seq_along(b)) {
c <-   df.holder.l[[i]] %>%
filter(orig_sent_id == j) %>%
add_column(new_sent_id = counter.v, .before = TRUE)
another.holder.l[[counter.v]] <- c
counter.v <- (counter.v + 1)
}
}
aaa <- do.call(bind_rows, another.holder.l)
aaa <- add_column(aaa, file_name = "Xenophon_Cyr1", .before = TRUE)
fp <- file.path("unified", paste0(aaa[1, 1], ".RDS"  ) )
saveRDS(aaa, file = fp)
files.v <- dir(pattern = ".xml")
files.v
df.holder.l <- vector(mode = "list")
for (i in seq_along(files.v)) { # a loop to extract attributes from all word and sentence elements
x <- read_xml(files.v[i])
y <- x %>%
xml_find_all("//word")
temp.holder.l <- vector(mode = "list")
for (j in seq_along(y)) {
a <- xml_attrs(y[[j]])
b <- xml_find_all(y[[j]], "..") %>%
xml_attrs()
names(b[[1]])[1] <- "orig_sent_id" # rename id attribute to avoid name duplication
c <- c(unlist(b), unlist(a) )
temp.holder.l[[j]] <- c
}
temp.df <- do.call(bind_rows, temp.holder.l)
df.holder.l[[i]] <- temp.df
}
counter.v <- 1
another.holder.l <- vector(mode = "list")
for (i in seq_along(df.holder.l)) {
a <- df.holder.l[[i]]$orig_sent_id
a <- as.integer(a)
df.holder.l[[i]]$orig_sent_id <- a
b <- unique(a)
for (j in seq_along(b)) {
c <-   df.holder.l[[i]] %>%
filter(orig_sent_id == j) %>%
add_column(new_sent_id = counter.v, .before = TRUE)
another.holder.l[[counter.v]] <- c
counter.v <- (counter.v + 1)
}
}
aaa <- do.call(bind_rows, another.holder.l)
aaa <- add_column(aaa, file_name = "Xenophon_Cyr7", .before = TRUE)
fp <- file.path("unified", paste0(aaa[1, 1], ".RDS"  ) )
saveRDS(aaa, file = fp)
files.v <- dir(pattern = ".xml")
files.v
df.holder.l <- vector(mode = "list")
for (i in seq_along(files.v)) { # a loop to extract attributes from all word and sentence elements
x <- read_xml(files.v[i])
y <- x %>%
xml_find_all("//word")
temp.holder.l <- vector(mode = "list")
for (j in seq_along(y)) {
a <- xml_attrs(y[[j]])
b <- xml_find_all(y[[j]], "..") %>%
xml_attrs()
names(b[[1]])[1] <- "orig_sent_id" # rename id attribute to avoid name duplication
c <- c(unlist(b), unlist(a) )
temp.holder.l[[j]] <- c
}
temp.df <- do.call(bind_rows, temp.holder.l)
df.holder.l[[i]] <- temp.df
}
counter.v <- 1
another.holder.l <- vector(mode = "list")
for (i in seq_along(df.holder.l)) {
a <- df.holder.l[[i]]$orig_sent_id
a <- as.integer(a)
df.holder.l[[i]]$orig_sent_id <- a
b <- unique(a)
for (j in seq_along(b)) {
c <-   df.holder.l[[i]] %>%
filter(orig_sent_id == j) %>%
add_column(new_sent_id = counter.v, .before = TRUE)
another.holder.l[[counter.v]] <- c
counter.v <- (counter.v + 1)
}
}
aaa <- do.call(bind_rows, another.holder.l)
aaa <- add_column(aaa, file_name = "Xenophon_Cyr2", .before = TRUE)
fp <- file.path("unified", paste0(aaa[1, 1], ".RDS"  ) )
saveRDS(aaa, file = fp)
files.v <- dir(pattern = ".xml")
files.v
files.v[c(1, 3, 2)]
files.v <- files.v[c(1, 3, 2)]
files.v
df.holder.l <- vector(mode = "list")
for (i in seq_along(files.v)) { # a loop to extract attributes from all word and sentence elements
x <- read_xml(files.v[i])
y <- x %>%
xml_find_all("//word")
temp.holder.l <- vector(mode = "list")
for (j in seq_along(y)) {
a <- xml_attrs(y[[j]])
b <- xml_find_all(y[[j]], "..") %>%
xml_attrs()
names(b[[1]])[1] <- "orig_sent_id" # rename id attribute to avoid name duplication
c <- c(unlist(b), unlist(a) )
temp.holder.l[[j]] <- c
}
temp.df <- do.call(bind_rows, temp.holder.l)
df.holder.l[[i]] <- temp.df
}
counter.v <- 1
another.holder.l <- vector(mode = "list")
for (i in seq_along(df.holder.l)) {
a <- df.holder.l[[i]]$orig_sent_id
a <- as.integer(a)
df.holder.l[[i]]$orig_sent_id <- a
b <- unique(a)
for (j in seq_along(b)) {
c <-   df.holder.l[[i]] %>%
filter(orig_sent_id == j) %>%
add_column(new_sent_id = counter.v, .before = TRUE)
another.holder.l[[counter.v]] <- c
counter.v <- (counter.v + 1)
}
}
aaa <- do.call(bind_rows, another.holder.l)
aaa <- add_column(aaa, file_name = "Xenophon_Cyr8", .before = TRUE)
fp <- file.path("unified", paste0(aaa[1, 1], ".RDS"  ) )
saveRDS(aaa, file = fp)
files.v <- dir(pattern = ".xml")
files.v
df.holder.l <- vector(mode = "list")
for (i in seq_along(files.v)) { # a loop to extract attributes from all word and sentence elements
x <- read_xml(files.v[i])
y <- x %>%
xml_find_all("//word")
temp.holder.l <- vector(mode = "list")
for (j in seq_along(y)) {
a <- xml_attrs(y[[j]])
b <- xml_find_all(y[[j]], "..") %>%
xml_attrs()
names(b[[1]])[1] <- "orig_sent_id" # rename id attribute to avoid name duplication
c <- c(unlist(b), unlist(a) )
temp.holder.l[[j]] <- c
}
temp.df <- do.call(bind_rows, temp.holder.l)
df.holder.l[[i]] <- temp.df
}
counter.v <- 1
another.holder.l <- vector(mode = "list")
for (i in seq_along(df.holder.l)) {
a <- df.holder.l[[i]]$orig_sent_id
a <- as.integer(a)
df.holder.l[[i]]$orig_sent_id <- a
b <- unique(a)
for (j in seq_along(b)) {
c <-   df.holder.l[[i]] %>%
filter(orig_sent_id == j) %>%
add_column(new_sent_id = counter.v, .before = TRUE)
another.holder.l[[counter.v]] <- c
counter.v <- (counter.v + 1)
}
}
aaa <- do.call(bind_rows, another.holder.l)
aaa <- add_column(aaa, file_name = "Xenophon_Hell1", .before = TRUE)
fp <- file.path("unified", paste0(aaa[1, 1], ".RDS"  ) )
saveRDS(aaa, file = fp)
files.v <- dir(pattern = ".xml")
files.v
df.holder.l <- vector(mode = "list")
for (i in seq_along(files.v)) { # a loop to extract attributes from all word and sentence elements
x <- read_xml(files.v[i])
y <- x %>%
xml_find_all("//word")
temp.holder.l <- vector(mode = "list")
for (j in seq_along(y)) {
a <- xml_attrs(y[[j]])
b <- xml_find_all(y[[j]], "..") %>%
xml_attrs()
names(b[[1]])[1] <- "orig_sent_id" # rename id attribute to avoid name duplication
c <- c(unlist(b), unlist(a) )
temp.holder.l[[j]] <- c
}
temp.df <- do.call(bind_rows, temp.holder.l)
df.holder.l[[i]] <- temp.df
}
counter.v <- 1
another.holder.l <- vector(mode = "list")
for (i in seq_along(df.holder.l)) {
a <- df.holder.l[[i]]$orig_sent_id
a <- as.integer(a)
df.holder.l[[i]]$orig_sent_id <- a
b <- unique(a)
for (j in seq_along(b)) {
c <-   df.holder.l[[i]] %>%
filter(orig_sent_id == j) %>%
add_column(new_sent_id = counter.v, .before = TRUE)
another.holder.l[[counter.v]] <- c
counter.v <- (counter.v + 1)
}
}
aaa <- do.call(bind_rows, another.holder.l)
aaa <- add_column(aaa, file_name = "Xenophon_Symp", .before = TRUE)
fp <- file.path("unified", paste0(aaa[1, 1], ".RDS"  ) )
saveRDS(aaa, file = fp)
files.v <- dir(pattern = ".xml")
i <- 1
x <- read_xml(files.v[i])
y <- x %>%
xml_find_all("//word")
temp.holder.l <- vector(mode = "list")
for (j in seq_along(y)) {
a <- xml_attrs(y[[j]])
b <- xml_find_all(y[[j]], "..") %>%
xml_attrs()
names(b[[1]])[1] <- "orig_sent_id" # rename id attribute to avoid name duplication
c <- c(unlist(b), unlist(a) )
temp.holder.l[[j]] <- c
}
temp.df <- do.call(bind_rows, temp.holder.l)
View(temp.df)
Thucydides_3 <- readRDS("~/working/demosthenes/data/xml/unified/Thucydides_3.RDS")
View(Thucydides_3)
mutate(temp.df, new_sent_id = orig_sent_id)
mutate(temp.df, new_sent_id = orig_sent_id, .before = TRUE)
mutate(temp.df, new_sent_id = orig_sent_id, .before = TRUE)
add_column(temp.df, new_sent_id = orig_sent_id, .before = TRUE)
View(temp.df)
add_column(temp.df, new_sent_id = temp.df$orig_sent_id, .before = TRUE)
temp.df <-  add_column(temp.df, new_sent_id = temp.df$orig_sent_id, .before = TRUE)
nomen.v <- files.v[i]
nomen.v <- files.v[i] %>%
gsub(".xml", .)
nomen.v <- files.v[i] %>%
gsub(".xml", "", .)
add_column(temp.df, file_name = nomen.v, .before = TRUE)
temp.df <-  add_column(temp.df, file_name = nomen.v, .before = TRUE)
fp <- file.path("unified", nomen.v, ".RDS"  ) )
fp <- file.path("unified", paste0(nomen.v, ".RDS"  ) )
saveRDS(temp.df, file = fp)
for (i in seq_along(files.v)) { # a loop to extract attributes from all word and sentence elements
x <- read_xml(files.v[i])
y <- x %>%
xml_find_all("//word")
temp.holder.l <- vector(mode = "list")
for (j in seq_along(y)) {
a <- xml_attrs(y[[j]])
b <- xml_find_all(y[[j]], "..") %>%
xml_attrs()
names(b[[1]])[1] <- "orig_sent_id" # rename id attribute to avoid name duplication
c <- c(unlist(b), unlist(a) )
temp.holder.l[[j]] <- c
}
temp.df <- do.call(bind_rows, temp.holder.l)
temp.df <-  add_column(temp.df, new_sent_id = temp.df$orig_sent_id, .before = TRUE)
nomen.v <- files.v[i] %>%
gsub(".xml", "", .)
temp.df <-  add_column(temp.df, file_name = nomen.v, .before = TRUE)
fp <- file.path("unified", paste0(nomen.v, ".RDS"  ) )
saveRDS(temp.df, file = fp)
}
files.v <- dir(pattern = ".RDS")
setwd("~/working/demosthenes/data/xml/unified")
files.v <- dir(pattern = ".RDS")
seq_along(files.v)
i <- 1
working.df <- readRDS(files.v[i])
add_column(global_token_id = 1:nrow(working.df))
add_column(working.df, global_token_id = 1:nrow(working.df))
working.df <- add_column(working.df, global_token_id = 1:nrow(working.df))
View(working.df)
a <- working.df$new_sent_id
a <- working.df$new_sent_id %>%
unique()
seq_along(a)
i <- 1
j <- 1
b <- working.df %>%
filter(new_sent_id == j)
View(b)
head.v <- b$head
head.v <- b$head %>%
as.integer()
which(head.v == 0)
head.v[which(head.v == 0)] <- NA
working.df$global_token_id[head.v]
b <- add_column(b, global_head_id = working.df$global_token_id[head.v] )
j <- 5
b <- working.df %>%
filter(new_sent_id == j)
View(b)
head.v <- b$head %>%
as.integer()
head.v[which(head.v == 0)] <- NA
b <- add_column(b, global_head_id = working.df$global_token_id[head.v] )
b <- working.df %>%
filter(new_sent_id == j)
head.v <- b$head %>%
as.integer()
head.v[which(head.v == 0)] <- NA
b <- add_column(b, global_head_id = b$global_token_id[head.v] )
holder.l <- vector(mode = "list", length(a))
for (j in seq_along(a)) {
b <- working.df %>%
filter(new_sent_id == j)
head.v <- b$head %>%
as.integer()
head.v[which(head.v == 0)] <- NA
b <- add_column(b, global_head_id = b$global_token_id[head.v] )
holder.l[[j]] <- b
}
working.df <-  do.call(bind_rows, holder.l)
View(working.df)
pos.v <- substr(working.df$postag, 1, 1)
pos.v <- substr(working.df$postag, 1, 1)
pos.v[which(pos.v == "n")] <- "noun"
pos.v[which(pos.v == "a")] <- "adjective"
pos.v[which(pos.v == "r")] <- "preposition"
pos.v[which(pos.v == "v")] <- "verb"
pos.v[which(pos.v == "d")] <- "adverb"
pos.v[which(pos.v == "u")] <- "punctuation"
pos.v[which(pos.v == "-")] <- "no_POS"
pos.v[which(pos.v == "c")] <- "conjunction"
pos.v[which(pos.v == "p")] <- "pronoun"
pos.v[which(pos.v == "l")] <- "article"
pos.v[which(pos.v == "i")] <- "interjection"
working.df <- add_column(working.df, self_pos = pos.v)
x <- working.df$global_head_id
working.df <- add_column(working.df, parent_pos = x)
working.df <-  do.call(bind_rows, holder.l)
#### expand morph code
pos.v <- substr(working.df$postag, 1, 1)
pos.v[which(pos.v == "n")] <- "noun"
pos.v[which(pos.v == "a")] <- "adjective"
pos.v[which(pos.v == "r")] <- "preposition"
pos.v[which(pos.v == "v")] <- "verb"
pos.v[which(pos.v == "d")] <- "adverb"
pos.v[which(pos.v == "u")] <- "punctuation"
pos.v[which(pos.v == "-")] <- "no_POS"
pos.v[which(pos.v == "c")] <- "conjunction"
pos.v[which(pos.v == "p")] <- "pronoun"
pos.v[which(pos.v == "l")] <- "article"
pos.v[which(pos.v == "i")] <- "interjection"
working.df <- add_column(working.df, self_pos = pos.v)
working.df <- add_column(working.df, parent_pos = working.df$self_pos[x])
working.df <-  do.call(bind_rows, holder.l)
#### expand morph code
holder.v <- substr(working.df$postag, 1, 1)
holder.v <- substr(working.df$postag, 2, 2)
holder.v
# person
holder.v <- substr(working.df$postag, 2, 2)
holder.v[which(holder.v == "1")] <- "noun"
holder.v[which(holder.v == "2")] <- "adjective"
holder.v[which(holder.v == "3")] <- "preposition"
working.df <- add_column(working.df, self_person = holder.v)
working.df <-  do.call(bind_rows, holder.l)
#### expand morph code
holder.v <- substr(working.df$postag, 1, 1)
holder.v[which(holder.v == "n")] <- "noun"
holder.v[which(holder.v == "a")] <- "adjective"
holder.v[which(holder.v == "r")] <- "preposition"
holder.v[which(holder.v == "v")] <- "verb"
holder.v[which(holder.v == "d")] <- "adverb"
holder.v[which(holder.v == "u")] <- "punctuation"
holder.v[which(holder.v == "-")] <- "no_POS"
holder.v[which(holder.v == "c")] <- "conjunction"
holder.v[which(holder.v == "p")] <- "pronoun"
holder.v[which(holder.v == "l")] <- "article"
holder.v[which(holder.v == "i")] <- "interjection"
working.df <- add_column(working.df, self_pos = holder.v)
# person
holder.v <- substr(working.df$postag, 2, 2)
holder.v[which(holder.v == "1")] <- "first"
holder.v[which(holder.v == "2")] <- "second"
holder.v[which(holder.v == "3")] <- "third"
working.df <- add_column(working.df, self_person = holder.v)
working.df <-  do.call(bind_rows, holder.l)
#### expand morph code
holder.v <- substr(working.df$postag, 1, 1)
holder.v[which(holder.v == "n")] <- "noun"
holder.v[which(holder.v == "a")] <- "adjective"
holder.v[which(holder.v == "r")] <- "preposition"
holder.v[which(holder.v == "v")] <- "verb"
holder.v[which(holder.v == "d")] <- "adverb"
holder.v[which(holder.v == "u")] <- "punctuation"
holder.v[which(holder.v == "-")] <- "no_POS"
holder.v[which(holder.v == "c")] <- "conjunction"
holder.v[which(holder.v == "p")] <- "pronoun"
holder.v[which(holder.v == "l")] <- "article"
holder.v[which(holder.v == "i")] <- "interjection"
working.df <- add_column(working.df, self_pos = holder.v)
holder.v <- substr(working.df$postag, 2, 2)
holder.v[which(holder.v == "1")] <- "first"
holder.v[which(holder.v == "2")] <- "second"
holder.v[which(holder.v == "3")] <- "third"
working.df <- add_column(working.df, self_person = NA)
working.df <- working.df$self_person <- holder.v
View(another.holder.l)
working.df <-  do.call(bind_rows, holder.l)
#### expand morph code
holder.v <- substr(working.df$postag, 1, 1)
holder.v[which(holder.v == "n")] <- "noun"
holder.v[which(holder.v == "a")] <- "adjective"
holder.v[which(holder.v == "r")] <- "preposition"
holder.v[which(holder.v == "v")] <- "verb"
holder.v[which(holder.v == "d")] <- "adverb"
holder.v[which(holder.v == "u")] <- "punctuation"
holder.v[which(holder.v == "-")] <- "no_POS"
holder.v[which(holder.v == "c")] <- "conjunction"
holder.v[which(holder.v == "p")] <- "pronoun"
holder.v[which(holder.v == "l")] <- "article"
holder.v[which(holder.v == "i")] <- "interjection"
working.df <- add_column(working.df, self_pos = holder.v)
# person
holder.v <- substr(working.df$postag, 2, 2)
holder.v[which(holder.v == "1")] <- "first"
holder.v[which(holder.v == "2")] <- "second"
holder.v[which(holder.v == "3")] <- "third"
working.df <- add_column(working.df, self_person = NA)
View(working.df)
working.df$self_person <- holder.v
working.df <-  do.call(bind_rows, holder.l)
working.df["self_person", ] <- NA
#### expand morph code
holder.v <- substr(working.df$postag, 1, 1)
holder.v[which(holder.v == "n")] <- "noun"
holder.v[which(holder.v == "a")] <- "adjective"
holder.v[which(holder.v == "r")] <- "preposition"
holder.v[which(holder.v == "v")] <- "verb"
holder.v[which(holder.v == "d")] <- "adverb"
holder.v[which(holder.v == "u")] <- "punctuation"
holder.v[which(holder.v == "-")] <- "no_POS"
holder.v[which(holder.v == "c")] <- "conjunction"
holder.v[which(holder.v == "p")] <- "pronoun"
holder.v[which(holder.v == "l")] <- "article"
holder.v[which(holder.v == "i")] <- "interjection"
working.df <- add_column(working.df, self_pos = holder.v)
# person
holder.v <- substr(working.df$postag, 2, 2)
holder.v[which(holder.v == "1")] <- "first"
holder.v[which(holder.v == "2")] <- "second"
holder.v[which(holder.v == "3")] <- "third"
holder.v[1]
which(holder.v == "-")
holder.v[which(holder.v == "-")] <- NA
holder.v
working.df <- add_column(working.df, self_person = holder.v)
# person
holder.v <- substr(working.df$postag, 3, 3)
# person
holder.v <- substr(working.df$postag, 3, 3)
holder.v
holder.v %>%
unique()
# number
holder.v <- substr(working.df$postag, 3, 3)
holder.v[which(holder.v == "s")] <- "singular"
holder.v[which(holder.v == "p")] <- "plural"
holder.v[which(holder.v == "d")] <- "dual"
holder.v[which(holder.v == "-")] <- NA
holder.v[which(holder.v == "_")] <- NA
working.df <- add_column(working.df, self_number = holder.v)
##
holder.v <- substr(working.df$postag, 4, 4)
holder.v %>%
unique()
holder.v
holder.v %>%
unique()
holder.v[which(holder.v == "a")] <- "aorist"
holder.v[which(holder.v == "p")] <- "present"
holder.v[which(holder.v == "r")] <- "perfect"
holder.v[which(holder.v == "f")] <- "future"
holder.v[which(holder.v == "i")] <- "imperfect"
holder.v[which(holder.v == "l")] <- "pluperfect"
holder.v[which(holder.v == "-")] <- NA
holder.v[which(holder.v == "_")] <- NA
working.df <- add_column(working.df, self_tense = holder.v)
holder.v <- substr(working.df$postag, 5, 5)
holder.v %>%
unique()
which(holder.v == "m")
which(holder.v == "p")
which(holder.v == "n")
holder.v %>%
unique()
holder.v <- substr(working.df$postag, 5, 5)
holder.v[which(holder.v == "i")] <- "indicative"
holder.v[which(holder.v == "p")] <- "participle"
holder.v[which(holder.v == "n")] <- "infinitive"
holder.v[which(holder.v == "m")] <- "imperative"
holder.v[which(holder.v == "s")] <- "subjunctive"
holder.v[which(holder.v == "o")] <- "optative"
holder.v[which(holder.v == "-")] <- NA
holder.v[which(holder.v == "_")] <- NA
working.df <- add_column(working.df, self_mood = holder.v)
holder.v <- substr(working.df$postag, 6, 6)
holder.v %>%
unique()
which(holder.v == "e")
which(holder.v == "m")
